generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                   String          @id
  name                 String?
  email                String          @unique
  image                String          @default("/images/profile-one.png")
  createdAt            DateTime        @default(now())
  updatedAt            DateTime        @updatedAt
  budgets              Budget[]
  pots                 Pot[]
  recurringBills       RecurringBill[]
  sentTransactions     Transaction[]   @relation(name: "TransactionOwner")
  receivedTransactions Transaction[]   @relation(name: "TransactionRecipient")
}

model Transaction {
  id          String          @id @default(uuid())
  amount      Decimal
  type        TransactionType
  category    CategoryType
  date        DateTime
  userId      String
  recipientId String?
  image       String?
  name        String
  user        User            @relation(name: "TransactionOwner", fields: [userId], references: [id])
  recipient   User?           @relation(name: "TransactionRecipient", fields: [recipientId], references: [id])
  budgetId    String?
  budget      Budget?         @relation(fields: [budgetId], references: [id])
}

model Budget {
  id           String        @id @default(uuid())
  category     CategoryType
  theme        BudgetTheme
  maxLimit     Float         @default(0)
  currentSpend Float         @default(0)
  remaining    Float         @default(0)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
}

model Pot {
  id            String   @id @default(uuid())
  name          String
  targetAmount  Float
  currentAmount Float    @default(0)
  theme         PotTheme
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  userId        String
  user          User     @relation(fields: [userId], references: [id])
}

model RecurringBill {
  id        String   @id @default(uuid())
  name      String
  amount    Float
  dueDate   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

enum TransactionType {
  INCOME
  EXPENSE
}

enum CategoryType {
  GENERAL
  GROCERIES
  DINING_OUT
  BILLS
  ENTERTAINMENT
  PERSONAL_CARE
}

enum FrequencyType {
  MONTHLY
  YEARLY
}

enum BudgetTheme {
  GREEN
  YELLOW
  CYAN
  NAVY
  RED
  PURPLE
  TURQUOISE
  BROWN
  MAGENTA
  BLUE
  GREY
  ARMY
  PINK
}

enum PotTheme {
  GREEN
  YELLOW
  CYAN
  NAVY
  RED
  PURPLE
  TURQUOISE
  BROWN
  MAGENTA
  BLUE
  GREY
  ARMY
  PINK
}
